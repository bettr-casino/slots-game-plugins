require "math"
require "Core"

Game005BaseGameReelWaysMechanic = {
}

function Game005BaseGameReelWaysMechanic:new(o)
	o = o or {}
	setmetatable(o, self)
	self.__index = self
	return o
end

function Game005BaseGameReelWaysMechanic:Initialize(reel)
end

function Game005BaseGameReelWaysMechanic:DisplayWays(reel, waySymbol, wayMatrix, waySymbolCount, duration)
    for i=1,waySymbolCount parallel do
        local wayReelID = wayMatrix[i].ReelID
       if wayReelID == reel.ReelID then
           local waysGroupProperty = reel.WaysGroup
           local rowIndex = wayMatrix[i].RowIndex
           local luaRowIndex = rowIndex + 1
           waysGroupProperty["RowIndex" .. luaRowIndex].SetActive(true)
           local animatorGroupProperty = reel["SymbolWaysWinAnimatorGroup" .. luaRowIndex]
           local symbolGroupProperty = reel["SymbolGroup" .. luaRowIndex]
           local currentKey = symbolGroupProperty.CurrentKey
           local animatorProperty = animatorGroupProperty[currentKey]
           animatorProperty.overrideAnimationDuration = true
           animatorProperty.animationDuration = duration
           BettrVisualsController.PlayAnimatorProperty(animatorProperty)
           -- Core.Animator:PlayAnimatorProperty(currentKey, animatorProperty)
       end
    end
end
