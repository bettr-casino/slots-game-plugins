require "math"
require "Core"

Game003 = {
    Manifest = {        
        BundleName = "game003highstakescascadingcash",
        BundleVersion = "control",
        BaseGameBackgroundPrefabName = "Game003BaseGameBackground",
        BaseGameMachinePrefabName = "Game003BaseGameMachine",
    }
}

function Game003:new(o)
	o = o or {}
	setmetatable(o, self)
	self.__index = self
	return o
end

function Game003:destroy()
	System.Print("Game003 destroy tile id={0}", self.id)
end

function Game003:OnError(callStack)
	System.Error("Game003 Error CallStack: {0}", callStack)
end

function Game003:Awake()
	System.Print("Game003 Awake tile id={0}", self.id)
end

function Game003:Start()
    series
        do
            BettrVisualsController.SwitchOrientationToLandscape()
        end
        do
            BettrAudioController.LoadBackgroundAudio("Game003HighStakesCascadingCash")
        end
        do
            BettrAudioController.PlayGameAudioLoop("Game003HighStakesCascadingCash", "control", "Game003HighStakesCascadingCashBackgroundMusic")       
        end
        do
            System.Print("Game003:Start tile id={0}", self.id)
            self:LoadBaseGameBackgroundPrefab()
            self:LoadBaseGamePrefab()
        end
        do
            Game003BaseGameBackground:StartBackground()
            self:SetBaseGameActive(true)
        end
    end
end

function Game003:LoadBaseGameBackgroundPrefab()
    series
        do
            System.Print("Game003:LoadBaseGameBackgroundPrefab tile id={0}", self.id)
            local manifest = self.Manifest
            local backgroundParentProperty = self.BaseGameBackgroundParent
            local backgroundParent = backgroundParentProperty["Pivot"]                        
            BettrAssetController.LoadPrefab(manifest.BundleName, manifest.BundleVersion, manifest.BaseGameBackgroundPrefabName, backgroundParent)
        end
    end
end

function Game003:LoadBaseGamePrefab()
    series
        do            
            local manifest = self.Manifest
            local baseGameMachineParentProperty = self.BaseGameMachineParent
            local baseGameMachineParent = baseGameMachineParentProperty["Pivot"]
            BettrAssetController.LoadPrefab(manifest.BundleName, manifest.BundleVersion, manifest.BaseGameMachinePrefabName, baseGameMachineParent)
        end
    end
end

function Game003:SetBaseGameActive(active)
    if active then
        self.BaseGameMachineParent.SetActive(true)
        Game003MachineState.Current.First.ActiveGame = "BaseGame"
    else
        self.BaseGameMachineParent.SetActive(false)
    end
end

function Game003:ActiveGame()
    return Game003MachineState.Current.First.ActiveGame
end

function Game003:OnBecameVisible()
	System.Print("Game003 OnBecameVisible tile id={0}", self.id)
end

function Game003:OnPointerClick()
	System.Print("Game003 OnPointerClick tile id={0}", self.id)
end

function Game003:OnPointerClick1Param(param)
	System.Print("Game003 OnPointerClick1Param param={0} tile id={1}", param, self.id)
end

return Game003:new()