require "math"
require "Core"

Game003Debug = {
    param = nil,
}

function Game003Debug:new(o)
	o = o or {}
	setmetatable(o, self)
	self.__index = self
	return o
end

function Game003Debug:destroy()
	System.Print("Game003Debug destroy tile id={0}", self.id)
end

function Game003Debug:OnError(callStack)
	System.Error("Game003Debug Error CallStack: {0}", callStack)
end

function Game003Debug:OnPointerClick1Param(param)
    self.param = param
end

function Game003Debug:Update()
    if self.param ~= nil then
        self:Debug()
        self.param = nil
    end
end

function Game003Debug:Debug()
    local s, e, l, v;
    s, e = self.param.find(self.param, "=")
    k = string.sub(self.param, 1, e-1)
    l = string.len(self.param)
    v = string.sub(self.param, e+1, l)
    System.Print("Game003Debug:Update() s={0} e={1} v={2} l={3} k={4}", s, e, v, l, k)
    if k == "timeScale" then
        local newTimeScale = tonumber(v)
        if Time.timeScale <= 1.0 then
            Time.timeScale = newTimeScale
        else
            Time.timeScale = 1.0
        end
    end
end

return Game003Debug:new()