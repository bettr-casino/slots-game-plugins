require "math"
require "Core"

Game001BaseGameMachineHorizontalReelsShiftMechanic = {
    Config = {
        Machine = "Game001",
        Variant = "EpicClockworkChronicles",
        Experiment = "control",
    },
    State = {
        MechanicsPrefab = nil,
        MainLobbyScene = nil,
    }
}

function Game001BaseGameMachineHorizontalReelsShiftMechanic:new(o)
	o = o or {}
	setmetatable(o, self)
	self.__index = self
	return o
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:Initialize(machine)
    series
        do
            local manifest = Game001.Manifest
            local prefabName = "BaseGameMachineHorizontalReelsShift"
            local machineParent = machine.MachineParent
            machineParent.SetActive(false)
            local mechanicsParent = machine.MechanicsParent
            mechanicsParent.SetActive(true)
            local mechanicsPrefab = BettrAssetController.LoadPrefab(manifest.BundleName, manifest.BundleVersion, prefabName, mechanicsParent.GameObject)
            self.State.MechanicsPrefab = mechanicsPrefab
            self.State.MechanicsPrefab.SetActive(false)
            System.Print("Game001BaseGameMachineHorizontalReelsShiftMechanic:Initialize mechanicsPrefab={0}", self.State.MechanicsPrefab.name)
        end
    end
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:StartMachine(machine)
    series
        do
            self:_ShowMachine(machine)
            machine:StartMachine()
            self:_StartMechanic(machine)
            self:_ShowMechanicPreview(machine)
            self:ShowSettingsDefault(machine, self.State.MainLobbyScene)
        end
    end
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:_ShowMachine(machine)
    local machineParent = machine.MachineParent
    machineParent.SetActive(true)
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:_StartMechanic(machine)
   series
      do
         self.State.MechanicsPrefab.SetActive(true)
      end
   end
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:_ShowMechanicPreview(machine)
   series
      do
         local reelCount = Game001BaseGameLayout.ReelCount.First.Value
         local firstReel = _G["Game001BaseGameReel1"]
         local lastReel = _G["Game001BaseGameReel" .. reelCount]
         local firstReelBottomSymbol = BettrMechanicsController.GetReelBottomVisibleSymbol(self.Config.Machine, 0)
         local firstReelTopSymbol = BettrMechanicsController.GetReelTopVisibleSymbol(self.Config.Machine, 0)
         local lastReelBottomSymbol = BettrMechanicsController.GetReelBottomVisibleSymbol(self.Config.Machine, reelCount - 1)
         local lastReelTopSymbol = BettrMechanicsController.GetReelTopVisibleSymbol(self.Config.Machine, reelCount - 1)
         BettrVisualsController.FireballMoveTo(nil, self.State.MechanicsPrefab, 20, 1, false) 
         parallel
             do
                BettrVisualsController.FireballMoveTo(self.State.MechanicsPrefab, firstReelBottomSymbol.gameObject, -50, 1, true) 
                local runningKey = BettrVisualsController.FireballMoveTo(nil, firstReelBottomSymbol.gameObject, 50, 1, false, true)
                System.WaitForSeconds(10)
                BettrVisualsController.FireballStop(runningKey)
             end
             do
                BettrVisualsController.FireballMoveTo(self.State.MechanicsPrefab, firstReelTopSymbol.gameObject, 50, 1, true) 
                local runningKey = BettrVisualsController.FireballMoveTo(nil, firstReelTopSymbol.gameObject, 50, 1, false, true)
                System.WaitForSeconds(10)
                BettrVisualsController.FireballStop(runningKey)
             end
             do
                BettrVisualsController.FireballMoveTo(self.State.MechanicsPrefab, lastReelBottomSymbol.gameObject, -50, 1, true)
                local runningKey = BettrVisualsController.FireballMoveTo(nil, lastReelBottomSymbol.gameObject, 50, 1, false, true)
                System.WaitForSeconds(10)
                BettrVisualsController.FireballStop(runningKey)
             end
             do
                BettrVisualsController.FireballMoveTo(self.State.MechanicsPrefab, lastReelTopSymbol.gameObject, 50, 1, true)
                local runningKey = BettrVisualsController.FireballMoveTo(nil, lastReelTopSymbol.gameObject, 50, 1, false, true)
                System.WaitForSeconds(10)
                BettrVisualsController.FireballStop(runningKey)
             end
         end
      end
   end
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:ShowSettings(machine, mainLobbyScene)
-- will call machine.ShowSettingsDefault once mechanic preview is done
    self.State.MainLobbyScene = mainLobbyScene
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:ShowSettingsDefault(machine, mainLobbyScene)
    local mainLobbyScene = self.State.MainLobbyScene
    machine:ShowSettingsDefault(mainLobbyScene)
    self.State.MainLobbyScene = nil
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:TryPaying(machine)
end


