require "math"
require "Core"

Game001BaseGameMachineHorizontalReelsShiftMechanic = {
    Config = {
        Machine = "Game001",
        Variant = "EpicClockworkChronicles",
        Experiment = "control",
        Mechanic = "HorizontalReelsShift",
    },
    State = {
        MechanicsPrefab = nil,
        MainLobbyScene = nil,
    }
}

function Game001BaseGameMachineHorizontalReelsShiftMechanic:new(o)
	o = o or {}
	setmetatable(o, self)
	self.__index = self
	return o
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:Initialize(machine)
    series
        do
            local manifest = Game001.Manifest
            local prefabName = "BaseGameMachineHorizontalReelsShift"
            local machineParent = machine.MachineParent
            machineParent.SetActive(false)
            local mechanicsParent = machine.MechanicsParent
            mechanicsParent.SetActive(true)
            local mechanicsPrefab = BettrAssetController.LoadPrefab(manifest.BundleName, manifest.BundleVersion, prefabName, mechanicsParent.GameObject)
            self.State.MechanicsPrefab = mechanicsPrefab
            self.State.MechanicsPrefab.SetActive(false)
            System.Print("Game001BaseGameMachineHorizontalReelsShiftMechanic:Initialize mechanicsPrefab={0}", self.State.MechanicsPrefab.name)
        end
    end
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:StartMachine(machine)
    series
        do
            self:_ShowMachine(machine)
            machine:StartMachine()
            self:_StartMechanic(machine)
            self:_ShowMechanicPreview(machine)
            self:ShowSettingsDefault(machine, self.State.MainLobbyScene)
        end
    end
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:_ShowMachine(machine)
    local machineParent = machine.MachineParent
    machineParent.SetActive(true)
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:_StartMechanic(machine)
   series
      do
         self.State.MechanicsPrefab.SetActive(true)
      end
   end
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:_ShowMechanicPreview(machine)
    series
        do
            local reelCount = Game001BaseGameLayout.ReelCount.First.Value
            self:PlayMechanic(machine, 0, reelCount-1)
        end
    end
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:PlayMechanic(machine, reelIndex1, reelIndex2)
   series
      do
         self.State.MechanicsPrefab.SetActive(true)
         local reelCount = Game001BaseGameLayout.ReelCount.First.Value
         BettrVisualsController.FireballMoveTo(nil, self.State.MechanicsPrefab, 20, 1, false)
         local visibleSymbolCount = BettrMechanicsController.GetReelVisibleSymbolCount(self.Config.Machine, reelIndex1)
         for i = 0, visibleSymbolCount-1 parallel do
             local symbol = BettrMechanicsController.GetReelVisibleSymbol(self.Config.Machine, reelIndex1, i)
             local symbolGroup = BettrMechanicsController.GetReelVisibleSymbolGroup(self.Config.Machine, reelIndex1, i)
             local symbolCurrentKey = symbolGroup.CurrentKey
             local otherSymbol = BettrMechanicsController.GetReelVisibleSymbol(self.Config.Machine, reelIndex2, i)
             local otherSymbolGroup = BettrMechanicsController.GetReelVisibleSymbolGroup(self.Config.Machine, reelIndex2, i)
             local otherSymbolCurrentKey = otherSymbolGroup.CurrentKey
             BettrVisualsController.FireballMoveTo(self.State.MechanicsPrefab, otherSymbol.gameObject, 20, 1, true)
             parallel
                do
                    BettrVisualsController.FireballMoveTo(nil, self.State.MechanicsPrefab, 20, 1, false)
                end
                do
                    BettrVisualsController.FireballMoveTo(nil, otherSymbol.gameObject, 20, 1, false)
                end
                do
                    BettrVisualsController.FireballMoveTo(self.State.MechanicsPrefab, symbol.gameObject, 20, 1, true)
                end
             end
             self.State.MechanicsPrefab.SetActive(false)
             parallel
                 do
                     BettrVisualsController.FireballMoveTo(nil, symbol.gameObject, 20, 1, false)
                     BettrVisualsController.CloneAndTweenGameObject(symbol.gameObject, otherSymbol.gameObject, 2, true, -10, true)
                     symbolGroup.SetCurrentActive(otherSymbolCurrentKey)
                 end
                 do
                     BettrVisualsController.FireballMoveTo(nil, otherSymbol.gameObject, 20, 1, false)
                     BettrVisualsController.CloneAndTweenGameObject(otherSymbol.gameObject, symbol.gameObject, 2, true, -20, true)
                     otherSymbolGroup.SetCurrentActive(symbolCurrentKey)
                 end
             end
         end
      end
   end
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:ShowSettings(machine, mainLobbyScene)
-- will call machine.ShowSettingsDefault once mechanic preview is done
    self.State.MainLobbyScene = mainLobbyScene
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:ShowSettingsDefault(machine, mainLobbyScene)
    local mainLobbyScene = self.State.MainLobbyScene
    machine:ShowSettingsDefault(mainLobbyScene)
    self.State.MainLobbyScene = nil
end

function Game001BaseGameMachineHorizontalReelsShiftMechanic:TryPaying(machine)
    return machine.Mechanics.WaysMechanic:TryPaying()
end


