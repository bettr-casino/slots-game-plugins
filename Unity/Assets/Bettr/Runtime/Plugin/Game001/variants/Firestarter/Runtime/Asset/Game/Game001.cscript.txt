require "math"
require "Core"

Game001 = {
    Manifest = {        
        BundleName = "game001",
        BundleVersion = "firestarter",
        BaseGameBackgroundPrefabName = "Game001BaseGameBackground",
        FreeSpinsBackgroundPrefabName = "Game001FreeSpinsBackground", 
        BaseGameMachinePrefabName = "Game001BaseGameMachine", 
        FreeSpinsMachinePrefabName = "Game001FreeSpinsMachine",
        WheelMachinePrefabName = "Game001WheelMachine"
    }
}

function Game001:new(o)
	o = o or {}
	setmetatable(o, self)
	self.__index = self
	return o
end

function Game001:destroy()
	System.Print("Game001 destroy tile id={0}", self.id)
end

function Game001:OnError(callStack)
	System.Error("Game001 Error CallStack: {0}", callStack)
end

function Game001:Awake()
	System.Print("Game001 Awake tile id={0}", self.id)
end

function Game001:Start()
    series
        do
            System.Print("Game001:Start tile id={0}", self.id)
            self:LoadBaseGameBackgroundPrefab()
            self:LoadFreeSpinsBackgroundPrefab()
            self:LoadBaseGamePrefab()
            self:LoadFreeSpinsPrefab()
            Game001BaseGameBackground:StartBackground()
            self:SetBaseGameActive(true)
        end
    end
end

function Game001:LoadBaseGameBackgroundPrefab()
    series
        do
            System.Print("Game001:LoadBaseGameBackgroundPrefab tile id={0}", self.id)
            local manifest = self.Manifest
            local backgroundParentProperty = self.BaseGameBackgroundParent
            local backgroundParent = backgroundParentProperty["Pivot"]                        
            BettrAssetController.LoadPrefab(manifest.BundleName, manifest.BundleVersion, manifest.BaseGameBackgroundPrefabName, backgroundParent)
        end
    end
end

function Game001:LoadFreeSpinsBackgroundPrefab()
    series
        do
            System.Print("Game001:LoadFreeSpinsBackgroundPrefab tile id={0}", self.id)
            local manifest = self.Manifest
            local backgroundParentProperty = self.FreeSpinsBackgroundParent
            local backgroundParent = backgroundParentProperty["Pivot"]                        
            BettrAssetController.LoadPrefab(manifest.BundleName, manifest.BundleVersion, manifest.FreeSpinsBackgroundPrefabName, backgroundParent)
        end
    end
end

function Game001:LoadBaseGamePrefab()
    series
        do            
            local manifest = self.Manifest
            local baseGameMachineParentProperty = self.BaseGameMachineParent
            local baseGameMachineParent = baseGameMachineParentProperty["Pivot"]
            BettrAssetController.LoadPrefab(manifest.BundleName, manifest.BundleVersion, manifest.BaseGameMachinePrefabName, baseGameMachineParent)
        end
    end
end

function Game001:LoadFreeSpinsPrefab()
    series
        do            
            local manifest = self.Manifest
            local freeSpinsMachineParentProperty = self.FreeSpinsMachineParent
            local freeSpinsMachineParent = freeSpinsMachineParentProperty["Pivot"]
            BettrAssetController.LoadPrefab(manifest.BundleName, manifest.BundleVersion, manifest.FreeSpinsMachinePrefabName, freeSpinsMachineParent)
        end
    end
end

function Game001:SetBaseGameActive(active)
    if active then
        self.BaseGameMachineParent.SetActive(true)
        Game001MachineState.Current.First.ActiveGame = "BaseGame"
    else
        self.BaseGameMachineParent.SetActive(false)
    end
end

function Game001:SetFreeSpinsActive(active)
    if active then
        self.FreeSpinsMachineParent.SetActive(true)
        Game001MachineState.Current.First.ActiveGame = "FreeSpins"
    else
        self.FreeSpinsMachineParent.SetActive(false)
    end
end

function Game001:OnFreeSpinsTriggeringStarted()
    series
        do
            local animatorProperty = self["free_spins_trigger_slide_in"]
            BettrVisualsController.PlayAnimatorProperty(animatorProperty)
            self:SetBaseGameActive(false)
            Game001BaseGameBackground:HideBackground()
            BettrVisualsController.SwitchOrientationToPortrait()
            local animatorProperty = self["free_spins_trigger_slide_out"]            
            BettrVisualsController.PlayAnimatorProperty(animatorProperty)
            Game001FreeSpinsBackground:StartBackground()                        
            self:SetFreeSpinsActive(true)
            Game001FreeSpinsMachine:StartFreeSpins()
        end
    end
end

function Game001:OnFreeSpinsTriggeringCompleted()
    series
        do
            local animatorProperty = self["free_spins_trigger_slide_in"]            
            BettrVisualsController.PlayAnimatorProperty(animatorProperty)
            self:SetFreeSpinsActive(false)
            Game001FreeSpinsBackground:HideBackground()
            BettrVisualsController.SwitchOrientationToLandscape()
            Game001BaseGameBackground:ShowBackground()
            self:SetBaseGameActive(true)
            local animatorProperty = self["free_spins_trigger_slide_out"]            
            BettrVisualsController.PlayAnimatorProperty(animatorProperty)
            Game001BaseGameMachine:OnFreeSpinsTriggeringCompleted()
        end
    end
end

function Game001:ActiveGame()
    return Game001MachineState.Current.First.ActiveGame
end

function Game001:OnBecameVisible()
	System.Print("Game001 OnBecameVisible tile id={0}", self.id)
end

return Game001:new()