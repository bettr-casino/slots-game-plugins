require "math"
require "Core"

Game001BaseGameMachineReelMatrixMechanic = {
    Config = {
        Machine = "Game001",
        Variant = "EpicDragonsHoard",
        Experiment = "control",
        Mechanic = "ReelMatrix",
    },
    State = {
        MechanicsPrefab = nil,
        ReelMatrixController = nil,
    }
}

function Game001BaseGameMachineReelMatrixMechanic:new(o)
	o = o or {}
	setmetatable(o, self)
	self.__index = self
	return o
end

function Game001BaseGameMachineReelMatrixMechanic:Initialize(machine)
    series
        do
            local manifest = Game001.Manifest
            local prefabName = "BaseGameMachineReelMatrix"
            local machineParent = machine.MachineParent
            local mechanicsParent = machine.MechanicsParent
            local mechanicsPrefab = BettrAssetController.LoadPrefab(manifest.BundleName, manifest.BundleVersion, prefabName, mechanicsParent.GameObject)
            mechanicsPrefab.SetActive(false)
            mechanicsPrefab.name = self.Config.Mechanic
            self.State.MechanicsPrefab = mechanicsPrefab
            self.State.ReelMatrixController = _G["Game001BaseGameMachineReelMatrixController"]        
            System.Print("Game001BaseGameMachineReelMatrixMechanic:Initialize mechanicsPrefab={0}", self.State.MechanicsPrefab.name)
        end
    end
end

function Game001BaseGameMachineReelMatrixMechanic:SetReelStripData(reelStripData)
    self.State.ReelMatrixController:SetReelStripData(reelStripData)
end

function Game001BaseGameMachineReelMatrixMechanic:SetReelStripSymbolTextures(meshRenderersMatrix, meshRenderers)
    self.State.ReelMatrixController:SetReelStripSymbolTextures(meshRenderersMatrix, meshRenderers)
end

function Game001BaseGameMachineReelMatrixMechanic:ResetEngines()
    self.State.ReelMatrixController:ResetEngines()
end

function Game001BaseGameMachineReelMatrixMechanic:ResetTextures()
    self.State.ReelMatrixController:ResetTextures()
end

function Game001BaseGameMachineReelMatrixMechanic:SetOutcomes(outcomesTable)
    self.State.ReelMatrixController:SetOutcomes(outcomesTable)
end

function Game001BaseGameMachineReelMatrixMechanic:ShowReelMatrix(initialMeshRenderers)
    self.State.ReelMatrixController:ShowReelMatrix(initialMeshRenderers)
end

function Game001BaseGameMachineReelMatrixMechanic:StartEngines()
    self.State.ReelMatrixController:StartEngines()            
end

function Game001BaseGameMachineReelMatrixMechanic:SpinEngines(machine)
    self.State.ReelMatrixController:SpinEngines()
end

function Game001BaseGameMachineReelMatrixMechanic:OutcomeIndex()
    return self.State.ReelMatrixController:OutcomeIndex()
end

function Game001BaseGameMachineReelMatrixMechanic:LockEngines(lockedSymbolsReelMatrix)
    return self.State.ReelMatrixController:LockEngines(lockedSymbolsReelMatrix)
end

function Game001BaseGameMachineReelMatrixMechanic:GetProperty(key)
    return self.State.ReelMatrixController[key]
end



