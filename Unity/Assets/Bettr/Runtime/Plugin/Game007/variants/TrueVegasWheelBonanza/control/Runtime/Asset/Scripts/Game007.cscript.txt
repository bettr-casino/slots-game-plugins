require "math"
require "Core"

Game007 = {
    Manifest = {        
        BundleName = "game007truevegaswheelbonanza",
        BundleVersion = "control",
        BaseGameBackgroundPrefabName = "Game007BaseGameBackground",
        BaseGameMachinePrefabName = "Game007BaseGameMachine",
    }
}

function Game007:new(o)
	o = o or {}
	setmetatable(o, self)
	self.__index = self
	return o
end

function Game007:destroy()
	System.Print("Game007 destroy tile id={0}", self.id)
end

function Game007:OnError(callStack)
	System.Error("Game007 Error CallStack: {0}", callStack)
end

function Game007:Awake()
	System.Print("Game007 Awake tile id={0}", self.id)
end

function Game007:Start()
    series
        do
            BettrVisualsController.SwitchOrientationToLandscape()
        end
        do
            Game007BaseGameBackground:StartBackground()
        end
        do
            BettrAudioController.LoadBackgroundAudio("Game007TrueVegasWheelBonanza")
        end
        do
            BettrAudioController.PlayGameAudioLoop("Game007TrueVegasWheelBonanza", "control", "Game007TrueVegasWheelBonanzaBackgroundMusic")       
        end
        do
            BettrVideoController.LoadBackgroundVideo(Game007BaseGameBackground, "Game007", "TrueVegasWheelBonanza", "control")
        end        
        do
            BettrVideoController.PlayBackgroundVideo(Game007BaseGameBackground, "Game007", "TrueVegasWheelBonanza", "control")
        end
        do
            System.Print("Game007:Start Load Machine Prefabs tile id={0}", self.id)
            self:LoadBaseGamePrefab()
        end
        do
            self:SetBaseGameActive(true)
        end
    end
end

function Game007:LoadBaseGameBackgroundPrefab()
    series
        do
            System.Print("Game007:LoadBaseGameBackgroundPrefab tile id={0}", self.id)
            local manifest = self.Manifest
            local backgroundParentProperty = self.BaseGameBackgroundParent
            local backgroundParent = backgroundParentProperty["Pivot"]                        
            BettrAssetController.LoadPrefab(manifest.BundleName, manifest.BundleVersion, manifest.BaseGameBackgroundPrefabName, backgroundParent)
        end
    end
end

function Game007:LoadBaseGamePrefab()
    series
        do            
            local manifest = self.Manifest
            local baseGameMachineParentProperty = self.BaseGameMachineParent
            local baseGameMachineParent = baseGameMachineParentProperty["Pivot"]
            BettrAssetController.LoadPrefab(manifest.BundleName, manifest.BundleVersion, manifest.BaseGameMachinePrefabName, baseGameMachineParent)
        end
    end
end

function Game007:SetBaseGameActive(active)
    if active then
        self.BaseGameMachineParent.SetActive(true)
        Game007MachineState.Current.First.ActiveGame = "BaseGame"
    else
        self.BaseGameMachineParent.SetActive(false)
    end
end

function Game007:ActiveGame()
    return Game007MachineState.Current.First.ActiveGame
end

function Game007:OnBecameVisible()
	System.Print("Game007 OnBecameVisible tile id={0}", self.id)
end

function Game007:OnPointerClick()
	System.Print("Game007 OnPointerClick tile id={0}", self.id)
end

function Game007:OnPointerClick1Param(param)
	System.Print("Game007 OnPointerClick1Param param={0} tile id={1}", param, self.id)
end

return Game007:new()