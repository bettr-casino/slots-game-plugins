require "math"
require "Core"

{{machineName}}BaseGameMachineCascadingReelsMultiplierMechanic = {
}

function {{machineName}}BaseGameMachineCascadingReelsMultiplierMechanic:new(o)
	o = o or {}
	setmetatable(o, self)
	self.__index = self
	return o
end

function {{machineName}}BaseGameMachineCascadingReelsMultiplierMechanic:Initialize(machine)
    series
        do
            local manifest = {{machineName}}.Manifest
            local prefabName = "BaseGameMachineCascadingReelsMultiplier"
            local parentGameObject = machine.MechanicsParent.GameObject
            System.Print("{{machineName}}BaseGameMachineCascadingReelsMultiplierMechanic:Initialize before manifest.BundleName={0} manifest.BundleVersion={1} prefabName={2} parentGameObject={3}", manifest.BundleName, manifest.BundleVersion, prefabName, parentGameObject.name)    
            local mechanicsPrefab = BettrAssetController.LoadPrefab(manifest.BundleName, manifest.BundleVersion, prefabName, parentGameObject)
            mechanicsPrefab.SetActive(false)
            System.Print("{{machineName}}BaseGameMachineCascadingReelsMultiplierMechanic:Initialize mechanicsPrefab={0}", mechanicsPrefab.name)
        end
    end
end

function {{machineName}}BaseGameMachineCascadingReelsMultiplierMechanic:TryPaying(machine)
end


