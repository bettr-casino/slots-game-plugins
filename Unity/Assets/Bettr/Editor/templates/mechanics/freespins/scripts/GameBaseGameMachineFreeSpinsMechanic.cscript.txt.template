require "math"
require "Core"

{{machineName}}BaseGameMachine{{mechanicName}}Mechanic = {
    Config = {
        Machine = "{{machineName}}",
        Variant = "{{machineVariant}}",
        Experiment = "{{experimentVariant}}",
        Mechanic = "{{mechanicName}}",
    },
    State = {
        MechanicsPrefab = nil,
        ReelMatrixMechanic = nil,
    }
}

function {{machineName}}BaseGameMachine{{mechanicName}}Mechanic:new(o)
	o = o or {}
	setmetatable(o, self)
	self.__index = self
	return o
end

function {{machineName}}BaseGameMachine{{mechanicName}}Mechanic:Initialize(machine)
    series
        do
            local manifest = {{machineName}}.Manifest
            local prefabName = "BaseGameMachine{{mechanicName}}"
            local machineParent = machine.MachineParent
            local mechanicsParent = machine.MechanicsParent
            local mechanicsPrefab = BettrAssetController.LoadPrefab(manifest.BundleName, manifest.BundleVersion, prefabName, mechanicsParent.GameObject)
            mechanicsPrefab.SetActive(false)
            mechanicsPrefab.name = self.Config.Mechanic
            self.State.MechanicsPrefab = mechanicsPrefab
            self.State.ReelMatrixMechanic = machine.Mechanics.ReelMatrixMechanic
        end
    end
end

function {{machineName}}BaseGameMachine{{mechanicName}}Mechanic:OnBaseGameSpinCompleted(machine)
    series
        do
            System.Print("{{machineName}}BaseGameMachine{{mechanicName}}Mechanic:{{machineName}}BaseGameState.SpinState.First.State={0}", {{machineName}}BaseGameState.SpinState.First.State)
            {{machineName}}BaseGameState.SpinState.First.State = "Waiting"
            System.WaitForSeconds(1)
            local machineParent = machine.MachineParent
            local mechanicsPrefab = self.State.MechanicsPrefab
            local reelStripData = BettrMathController.GetBaseGameMechanicDataMatrix(self.Config.Machine, self.Config.Mechanic, "ReelStrip")
            
            machineParent.SetActive(false)            
            
            local outcomesTable = BettrMathController.GetBaseGameMechanicMatrix(self.Config.Machine, self.Config.Mechanic, "Outcomes")
            
            self.State.ReelMatrixMechanic:SetReelStripData(reelStripData)
            self.State.ReelMatrixMechanic:SetReelStripSymbolTextures(self.State.MechanicsPrefab)
            self.State.ReelMatrixMechanic:SetOutcomes(outcomesTable)
            self.State.ReelMatrixMechanic:ShowReelMatrix()            
            self.State.ReelMatrixMechanic:StartEngines()
            
            System.WaitForSeconds(1)            
            self.State.ReelMatrixMechanic:SpinEngines(self, machine)
            
        end
    end
end

