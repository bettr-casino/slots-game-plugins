require "math"
require "Core"

{{machineName}}BaseGameReel{{mechanicName}}Mechanic = {
    Config = {
        Machine = "{{machineName}}",
        Variant = "{{machineVariant}}",
        Experiment = "{{experimentVariant}}",
        Mechanic = "{{mechanicName}}",
    },
    State = {
        MechanicsPrefab = nil,
    },
}

function {{machineName}}BaseGameReel{{mechanicName}}Mechanic:new(o)
	o = o or {}
	setmetatable(o, self)
	self.__index = self
	return o
end

function {{machineName}}BaseGameReel{{mechanicName}}Mechanic:destroy()
	System.Print("{{machineName}}BaseGameReel{{mechanicName}}Mechanic destroy tile id={0}", self.id)
end

function {{machineName}}BaseGameReel{{mechanicName}}Mechanic:Initialize(reel)
end

function {{machineName}}BaseGameReel{{mechanicName}}Mechanic:StartEngines(reel, machine)
    local mechanicPrefab = machine.Mechanics.{{mechanicName}}Mechanic.State.MechanicsPrefab
    local clonedMechanicPrefab = BettrVisualsController.CloneAndOverlayGameObject(mechanicPrefab)
    clonedMechanicPrefab.name = mechanicPrefab.name .. reel.ReelID
    self.State.MechanicsPrefab = clonedMechanicPrefab
end

function {{machineName}}BaseGameReel{{mechanicName}}Mechanic:OnApplyOutcomeReceived(reel)    
    reel.BettrReelController.OnApplyOutcomeReceived()
end


