require "math"
require "Core"
require "Utils"

{{machineName}}BaseGameReel = {
}

function {{machineName}}BaseGameReel:DisplayWays(waySymbol, wayMatrix, waySymbolCount, duration)
    for i=1,waySymbolCount parallel do
        local wayReelID = wayMatrix[i].ReelID
       if wayReelID == self.ReelID then
           local waysGroupProperty = self.WaysGroup
           local rowIndex = wayMatrix[i].RowIndex
           local luaRowIndex = rowIndex + 1
           waysGroupProperty["RowIndex" .. luaRowIndex].SetActive(true)
           local animatorGroupProperty = self["SymbolWaysWinAnimatorGroup" .. luaRowIndex]
           local symbolGroupProperty = self["SymbolGroup" .. luaRowIndex]
           local currentKey = symbolGroupProperty.CurrentKey
           local animatorProperty = animatorGroupProperty[currentKey]
           animatorProperty.overrideAnimationDuration = true
           animatorProperty.animationDuration = duration
           BettrVisualsController.PlayAnimatorProperty(animatorProperty)
           -- Core.Animator:PlayAnimatorProperty(currentKey, animatorProperty)
       end
    end
end

function {{machineName}}BaseGameReel:HideWays(waySymbol, wayMatrix, wayMatrixCount)
    for i=1,wayMatrixCount parallel do
        local wayReelID = wayMatrix[i].ReelID
        if wayReelID == self.ReelID then
            local waysGroupProperty = self.WaysGroup
            local rowIndex = wayMatrix[i].RowIndex
            local luaRowIndex = rowIndex + 1
            waysGroupProperty["RowIndex" .. luaRowIndex].SetActive(false)
        end
    end
end

